//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace X.WFConfig.Asset {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultInfoOfAssetData_Stkf6_SDP", Namespace="http://schemas.datacontract.org/2004/07/Em.Entities")]
    [System.SerializableAttribute()]
    public partial class ResultInfoOfAssetData_Stkf6_SDP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ErrorMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private X.WFConfig.Asset.AssetData ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SucceedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string preValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeMessage {
            get {
                return this.CodeMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeMessageField, value) != true)) {
                    this.CodeMessageField = value;
                    this.RaisePropertyChanged("CodeMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ErrorMessages {
            get {
                return this.ErrorMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessagesField, value) != true)) {
                    this.ErrorMessagesField = value;
                    this.RaisePropertyChanged("ErrorMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldMessage {
            get {
                return this.OldMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OldMessageField, value) != true)) {
                    this.OldMessageField = value;
                    this.RaisePropertyChanged("OldMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public X.WFConfig.Asset.AssetData Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Succeed {
            get {
                return this.SucceedField;
            }
            set {
                if ((this.SucceedField.Equals(value) != true)) {
                    this.SucceedField = value;
                    this.RaisePropertyChanged("Succeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string preValue {
            get {
                return this.preValueField;
            }
            set {
                if ((object.ReferenceEquals(this.preValueField, value) != true)) {
                    this.preValueField = value;
                    this.RaisePropertyChanged("preValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetData", Namespace="http://schemas.datacontract.org/2004/07/Em.FundTrade.AssetHomePage.Entities")]
    [System.SerializableAttribute()]
    public partial class AssetData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalculateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CashBagDailyIncomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CashBagFloatingIncomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CashBagVolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ElapsedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedBagFloatingIncomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedBagVolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HighEndProductVolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal IndexBagFloatingIncomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal IndexBagVolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NormalFundFloatingIncomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NormalFundVolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAssetVolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalculateTime {
            get {
                return this.CalculateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CalculateTimeField, value) != true)) {
                    this.CalculateTimeField = value;
                    this.RaisePropertyChanged("CalculateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CashBagDailyIncome {
            get {
                return this.CashBagDailyIncomeField;
            }
            set {
                if ((this.CashBagDailyIncomeField.Equals(value) != true)) {
                    this.CashBagDailyIncomeField = value;
                    this.RaisePropertyChanged("CashBagDailyIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CashBagFloatingIncome {
            get {
                return this.CashBagFloatingIncomeField;
            }
            set {
                if ((this.CashBagFloatingIncomeField.Equals(value) != true)) {
                    this.CashBagFloatingIncomeField = value;
                    this.RaisePropertyChanged("CashBagFloatingIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CashBagVol {
            get {
                return this.CashBagVolField;
            }
            set {
                if ((this.CashBagVolField.Equals(value) != true)) {
                    this.CashBagVolField = value;
                    this.RaisePropertyChanged("CashBagVol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerNo {
            get {
                return this.CustomerNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNoField, value) != true)) {
                    this.CustomerNoField = value;
                    this.RaisePropertyChanged("CustomerNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ElapsedTime {
            get {
                return this.ElapsedTimeField;
            }
            set {
                if ((this.ElapsedTimeField.Equals(value) != true)) {
                    this.ElapsedTimeField = value;
                    this.RaisePropertyChanged("ElapsedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedBagFloatingIncome {
            get {
                return this.FixedBagFloatingIncomeField;
            }
            set {
                if ((this.FixedBagFloatingIncomeField.Equals(value) != true)) {
                    this.FixedBagFloatingIncomeField = value;
                    this.RaisePropertyChanged("FixedBagFloatingIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedBagVol {
            get {
                return this.FixedBagVolField;
            }
            set {
                if ((this.FixedBagVolField.Equals(value) != true)) {
                    this.FixedBagVolField = value;
                    this.RaisePropertyChanged("FixedBagVol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HighEndProductVol {
            get {
                return this.HighEndProductVolField;
            }
            set {
                if ((this.HighEndProductVolField.Equals(value) != true)) {
                    this.HighEndProductVolField = value;
                    this.RaisePropertyChanged("HighEndProductVol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal IndexBagFloatingIncome {
            get {
                return this.IndexBagFloatingIncomeField;
            }
            set {
                if ((this.IndexBagFloatingIncomeField.Equals(value) != true)) {
                    this.IndexBagFloatingIncomeField = value;
                    this.RaisePropertyChanged("IndexBagFloatingIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal IndexBagVol {
            get {
                return this.IndexBagVolField;
            }
            set {
                if ((this.IndexBagVolField.Equals(value) != true)) {
                    this.IndexBagVolField = value;
                    this.RaisePropertyChanged("IndexBagVol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NormalFundFloatingIncome {
            get {
                return this.NormalFundFloatingIncomeField;
            }
            set {
                if ((this.NormalFundFloatingIncomeField.Equals(value) != true)) {
                    this.NormalFundFloatingIncomeField = value;
                    this.RaisePropertyChanged("NormalFundFloatingIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NormalFundVol {
            get {
                return this.NormalFundVolField;
            }
            set {
                if ((this.NormalFundVolField.Equals(value) != true)) {
                    this.NormalFundVolField = value;
                    this.RaisePropertyChanged("NormalFundVol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAssetVol {
            get {
                return this.TotalAssetVolField;
            }
            set {
                if ((this.TotalAssetVolField.Equals(value) != true)) {
                    this.TotalAssetVolField = value;
                    this.RaisePropertyChanged("TotalAssetVol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Asset.IAsset")]
    public interface IAsset {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsset/GetAssertInfo", ReplyAction="http://tempuri.org/IAsset/GetAssertInfoResponse")]
        X.WFConfig.Asset.ResultInfoOfAssetData_Stkf6_SDP GetAssertInfo(string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsset/GetAssertInfoWithoutCache", ReplyAction="http://tempuri.org/IAsset/GetAssertInfoWithoutCacheResponse")]
        X.WFConfig.Asset.ResultInfoOfAssetData_Stkf6_SDP GetAssertInfoWithoutCache(string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsset/GetAssertInfoInCache", ReplyAction="http://tempuri.org/IAsset/GetAssertInfoInCacheResponse")]
        X.WFConfig.Asset.ResultInfoOfAssetData_Stkf6_SDP GetAssertInfoInCache(string customerNo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAssetChannel : X.WFConfig.Asset.IAsset, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AssetClient : System.ServiceModel.ClientBase<X.WFConfig.Asset.IAsset>, X.WFConfig.Asset.IAsset {
        
        public AssetClient() {
        }
        
        public AssetClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AssetClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssetClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssetClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public X.WFConfig.Asset.ResultInfoOfAssetData_Stkf6_SDP GetAssertInfo(string customerNo) {
            return base.Channel.GetAssertInfo(customerNo);
        }
        
        public X.WFConfig.Asset.ResultInfoOfAssetData_Stkf6_SDP GetAssertInfoWithoutCache(string customerNo) {
            return base.Channel.GetAssertInfoWithoutCache(customerNo);
        }
        
        public X.WFConfig.Asset.ResultInfoOfAssetData_Stkf6_SDP GetAssertInfoInCache(string customerNo) {
            return base.Channel.GetAssertInfoInCache(customerNo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Asset.IAssetManager")]
    public interface IAssetManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetManager/CustomerInCache", ReplyAction="http://tempuri.org/IAssetManager/CustomerInCacheResponse")]
        System.Collections.Generic.List<string> CustomerInCache();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetManager/UpdateAsset", ReplyAction="http://tempuri.org/IAssetManager/UpdateAssetResponse")]
        bool UpdateAsset(string customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetManager/UpdateAssetByData", ReplyAction="http://tempuri.org/IAssetManager/UpdateAssetByDataResponse")]
        bool UpdateAssetByData(X.WFConfig.Asset.AssetData info, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetManager/GetCacheCount", ReplyAction="http://tempuri.org/IAssetManager/GetCacheCountResponse")]
        int GetCacheCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetManager/ClearCache", ReplyAction="http://tempuri.org/IAssetManager/ClearCacheResponse")]
        int ClearCache();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetManager/InvalidAsset", ReplyAction="http://tempuri.org/IAssetManager/InvalidAssetResponse")]
        bool InvalidAsset(string customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetManager/HasAsset", ReplyAction="http://tempuri.org/IAssetManager/HasAssetResponse")]
        bool HasAsset(string customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetManager/GetHitRatio", ReplyAction="http://tempuri.org/IAssetManager/GetHitRatioResponse")]
        double GetHitRatio();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetManager/ResetHitRatio", ReplyAction="http://tempuri.org/IAssetManager/ResetHitRatioResponse")]
        void ResetHitRatio();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAssetManagerChannel : X.WFConfig.Asset.IAssetManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AssetManagerClient : System.ServiceModel.ClientBase<X.WFConfig.Asset.IAssetManager>, X.WFConfig.Asset.IAssetManager {
        
        public AssetManagerClient() {
        }
        
        public AssetManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AssetManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssetManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssetManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<string> CustomerInCache() {
            return base.Channel.CustomerInCache();
        }
        
        public bool UpdateAsset(string customer) {
            return base.Channel.UpdateAsset(customer);
        }
        
        public bool UpdateAssetByData(X.WFConfig.Asset.AssetData info, string guid) {
            return base.Channel.UpdateAssetByData(info, guid);
        }
        
        public int GetCacheCount() {
            return base.Channel.GetCacheCount();
        }
        
        public int ClearCache() {
            return base.Channel.ClearCache();
        }
        
        public bool InvalidAsset(string customer) {
            return base.Channel.InvalidAsset(customer);
        }
        
        public bool HasAsset(string customer) {
            return base.Channel.HasAsset(customer);
        }
        
        public double GetHitRatio() {
            return base.Channel.GetHitRatio();
        }
        
        public void ResetHitRatio() {
            base.Channel.ResetHitRatio();
        }
    }
}
