//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace X.WFConfig.DateService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DateService.IDateService")]
    public interface IDateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDateService/FetchDateTime", ReplyAction="http://tempuri.org/IDateService/FetchDateTimeResponse")]
        System.DateTime FetchDateTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDateService/FetchCurrWorkDay", ReplyAction="http://tempuri.org/IDateService/FetchCurrWorkDayResponse")]
        System.DateTime FetchCurrWorkDay(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDateService/FetchLastWorkday", ReplyAction="http://tempuri.org/IDateService/FetchLastWorkdayResponse")]
        System.DateTime FetchLastWorkday(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDateService/FetchLast2Workday", ReplyAction="http://tempuri.org/IDateService/FetchLast2WorkdayResponse")]
        System.DateTime FetchLast2Workday(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDateService/FetchLast3Workday", ReplyAction="http://tempuri.org/IDateService/FetchLast3WorkdayResponse")]
        System.DateTime FetchLast3Workday(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDateService/FetchNextWorkday", ReplyAction="http://tempuri.org/IDateService/FetchNextWorkdayResponse")]
        System.DateTime FetchNextWorkday(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDateService/FetchNext2Workday", ReplyAction="http://tempuri.org/IDateService/FetchNext2WorkdayResponse")]
        System.DateTime FetchNext2Workday(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDateService/FetchNext3Workday", ReplyAction="http://tempuri.org/IDateService/FetchNext3WorkdayResponse")]
        System.DateTime FetchNext3Workday(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDateService/FetchPointWorkday", ReplyAction="http://tempuri.org/IDateService/FetchPointWorkdayResponse")]
        System.DateTime FetchPointWorkday(System.DateTime date, int day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDateService/FetchPreCfmDate", ReplyAction="http://tempuri.org/IDateService/FetchPreCfmDateResponse")]
        System.DateTime FetchPreCfmDate(System.DateTime appTime);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDateServiceChannel : X.WFConfig.DateService.IDateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DateServiceClient : System.ServiceModel.ClientBase<X.WFConfig.DateService.IDateService>, X.WFConfig.DateService.IDateService {
        
        public DateServiceClient() {
        }
        
        public DateServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DateServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DateServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.DateTime FetchDateTime() {
            return base.Channel.FetchDateTime();
        }
        
        public System.DateTime FetchCurrWorkDay(System.DateTime date) {
            return base.Channel.FetchCurrWorkDay(date);
        }
        
        public System.DateTime FetchLastWorkday(System.DateTime date) {
            return base.Channel.FetchLastWorkday(date);
        }
        
        public System.DateTime FetchLast2Workday(System.DateTime date) {
            return base.Channel.FetchLast2Workday(date);
        }
        
        public System.DateTime FetchLast3Workday(System.DateTime date) {
            return base.Channel.FetchLast3Workday(date);
        }
        
        public System.DateTime FetchNextWorkday(System.DateTime date) {
            return base.Channel.FetchNextWorkday(date);
        }
        
        public System.DateTime FetchNext2Workday(System.DateTime date) {
            return base.Channel.FetchNext2Workday(date);
        }
        
        public System.DateTime FetchNext3Workday(System.DateTime date) {
            return base.Channel.FetchNext3Workday(date);
        }
        
        public System.DateTime FetchPointWorkday(System.DateTime date, int day) {
            return base.Channel.FetchPointWorkday(date, day);
        }
        
        public System.DateTime FetchPreCfmDate(System.DateTime appTime) {
            return base.Channel.FetchPreCfmDate(appTime);
        }
    }
}
