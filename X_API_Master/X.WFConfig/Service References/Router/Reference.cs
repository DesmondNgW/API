//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace X.WFConfig.Router {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginInfo", Namespace="http://schemas.datacontract.org/2004/07/Em.FundTrade.Route.Entities")]
    [System.SerializableAttribute()]
    public partial class LoginInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private X.WFConfig.Router.LoginType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public X.WFConfig.Router.LoginType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginType", Namespace="http://schemas.datacontract.org/2004/07/Em.FundTrade.Route.Entities")]
    public enum LoginType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IDCard = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmyIdentityCard = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MobilePhone = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Soldiers = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HomevisitPermit = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChinaPassPort = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignPassport = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EastmoneyPassport = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessLicense = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrganCodeCert = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OfficersCard = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrganOther = 13,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteInfo", Namespace="http://schemas.datacontract.org/2004/07/Em.FundTrade.Route.Entities")]
    [System.SerializableAttribute()]
    public partial class RouteInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EastmoneyPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private X.WFConfig.Router.Zone ZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertNo {
            get {
                return this.CertNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CertNoField, value) != true)) {
                    this.CertNoField = value;
                    this.RaisePropertyChanged("CertNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertType {
            get {
                return this.CertTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CertTypeField, value) != true)) {
                    this.CertTypeField = value;
                    this.RaisePropertyChanged("CertType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerNo {
            get {
                return this.CustomerNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNoField, value) != true)) {
                    this.CustomerNoField = value;
                    this.RaisePropertyChanged("CustomerNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EastmoneyPassport {
            get {
                return this.EastmoneyPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.EastmoneyPassportField, value) != true)) {
                    this.EastmoneyPassportField = value;
                    this.RaisePropertyChanged("EastmoneyPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public X.WFConfig.Router.Zone Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((this.ZoneField.Equals(value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Zone", Namespace="http://schemas.datacontract.org/2004/07/Em.FundTrade.Route.Entities")]
    public enum Zone : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeZero = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeOne = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeTwo = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeThree = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeFour = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeFive = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeSix = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeSeven = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeEight = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeNine = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradeTen = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceAccessStatus", Namespace="http://schemas.datacontract.org/2004/07/Em.FundTrade.Route.LoadBalance.Services.C" +
        "ontract")]
    [System.SerializableAttribute()]
    public partial class ServiceAccessStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FailedTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SuccessTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FailedTimes {
            get {
                return this.FailedTimesField;
            }
            set {
                if ((this.FailedTimesField.Equals(value) != true)) {
                    this.FailedTimesField = value;
                    this.RaisePropertyChanged("FailedTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SuccessTimes {
            get {
                return this.SuccessTimesField;
            }
            set {
                if ((this.SuccessTimesField.Equals(value) != true)) {
                    this.SuccessTimesField = value;
                    this.RaisePropertyChanged("SuccessTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Router.IRouter")]
    public interface IRouter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouter/GetRouteInfoByLoginInfo", ReplyAction="http://tempuri.org/IRouter/GetRouteInfoByLoginInfoResponse")]
        X.WFConfig.Router.RouteInfo GetRouteInfoByLoginInfo(X.WFConfig.Router.LoginInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouter/GetRouteInfoByCustomerNo", ReplyAction="http://tempuri.org/IRouter/GetRouteInfoByCustomerNoResponse")]
        X.WFConfig.Router.RouteInfo GetRouteInfoByCustomerNo(string customeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouter/AddRouteInfo", ReplyAction="http://tempuri.org/IRouter/AddRouteInfoResponse")]
        X.WFConfig.Router.RouteInfo AddRouteInfo(string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouter/BindMobilePhone", ReplyAction="http://tempuri.org/IRouter/BindMobilePhoneResponse")]
        bool BindMobilePhone(string customerNo, string mobilePhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouter/UnbindMobilePhone", ReplyAction="http://tempuri.org/IRouter/UnbindMobilePhoneResponse")]
        bool UnbindMobilePhone(string customerNo, string mobilePhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouter/BindEastmonyPassport", ReplyAction="http://tempuri.org/IRouter/BindEastmonyPassportResponse")]
        bool BindEastmonyPassport(string customerNo, string eastmoneyPassport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouter/UbindEastmoneyPassport", ReplyAction="http://tempuri.org/IRouter/UbindEastmoneyPassportResponse")]
        bool UbindEastmoneyPassport(string customerNo, string eastmoneyPassport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouter/Heartbeat", ReplyAction="http://tempuri.org/IRouter/HeartbeatResponse")]
        string Heartbeat();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRouterChannel : X.WFConfig.Router.IRouter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RouterClient : System.ServiceModel.ClientBase<X.WFConfig.Router.IRouter>, X.WFConfig.Router.IRouter {
        
        public RouterClient() {
        }
        
        public RouterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RouterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RouterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RouterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public X.WFConfig.Router.RouteInfo GetRouteInfoByLoginInfo(X.WFConfig.Router.LoginInfo info) {
            return base.Channel.GetRouteInfoByLoginInfo(info);
        }
        
        public X.WFConfig.Router.RouteInfo GetRouteInfoByCustomerNo(string customeNo) {
            return base.Channel.GetRouteInfoByCustomerNo(customeNo);
        }
        
        public X.WFConfig.Router.RouteInfo AddRouteInfo(string customerNo) {
            return base.Channel.AddRouteInfo(customerNo);
        }
        
        public bool BindMobilePhone(string customerNo, string mobilePhone) {
            return base.Channel.BindMobilePhone(customerNo, mobilePhone);
        }
        
        public bool UnbindMobilePhone(string customerNo, string mobilePhone) {
            return base.Channel.UnbindMobilePhone(customerNo, mobilePhone);
        }
        
        public bool BindEastmonyPassport(string customerNo, string eastmoneyPassport) {
            return base.Channel.BindEastmonyPassport(customerNo, eastmoneyPassport);
        }
        
        public bool UbindEastmoneyPassport(string customerNo, string eastmoneyPassport) {
            return base.Channel.UbindEastmoneyPassport(customerNo, eastmoneyPassport);
        }
        
        public string Heartbeat() {
            return base.Channel.Heartbeat();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Router.IRealServerManager")]
    public interface IRealServerManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRealServerManager/Regist", ReplyAction="http://tempuri.org/IRealServerManager/RegistResponse")]
        bool Regist(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRealServerManager/UnRegist", ReplyAction="http://tempuri.org/IRealServerManager/UnRegistResponse")]
        bool UnRegist(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRealServerManager/AccessStatus", ReplyAction="http://tempuri.org/IRealServerManager/AccessStatusResponse")]
        System.Collections.Generic.List<X.WFConfig.Router.ServiceAccessStatus> AccessStatus(string url);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRealServerManagerChannel : X.WFConfig.Router.IRealServerManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RealServerManagerClient : System.ServiceModel.ClientBase<X.WFConfig.Router.IRealServerManager>, X.WFConfig.Router.IRealServerManager {
        
        public RealServerManagerClient() {
        }
        
        public RealServerManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RealServerManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RealServerManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RealServerManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Regist(string url) {
            return base.Channel.Regist(url);
        }
        
        public bool UnRegist(string url) {
            return base.Channel.UnRegist(url);
        }
        
        public System.Collections.Generic.List<X.WFConfig.Router.ServiceAccessStatus> AccessStatus(string url) {
            return base.Channel.AccessStatus(url);
        }
    }
}
